/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@icon1-name: 'icon1';
@icon1-x: 0px;
@icon1-y: 0px;
@icon1-offset-x: 0px;
@icon1-offset-y: 0px;
@icon1-width: 95px;
@icon1-height: 95px;
@icon1-total-width: 295px;
@icon1-total-height: 195px;
@icon1-image: '../images/icons.png';
@icon1: 0px 0px 0px 0px 95px 95px 295px 195px '../images/icons.png' 'icon1';
@icon2-name: 'icon2';
@icon2-x: 100px;
@icon2-y: 0px;
@icon2-offset-x: -100px;
@icon2-offset-y: 0px;
@icon2-width: 95px;
@icon2-height: 95px;
@icon2-total-width: 295px;
@icon2-total-height: 195px;
@icon2-image: '../images/icons.png';
@icon2: 100px 0px -100px 0px 95px 95px 295px 195px '../images/icons.png' 'icon2';
@icon3-name: 'icon3';
@icon3-x: 0px;
@icon3-y: 100px;
@icon3-offset-x: 0px;
@icon3-offset-y: -100px;
@icon3-width: 95px;
@icon3-height: 95px;
@icon3-total-width: 295px;
@icon3-total-height: 195px;
@icon3-image: '../images/icons.png';
@icon3: 0px 100px 0px -100px 95px 95px 295px 195px '../images/icons.png' 'icon3';
@icon4-name: 'icon4';
@icon4-x: 100px;
@icon4-y: 100px;
@icon4-offset-x: -100px;
@icon4-offset-y: -100px;
@icon4-width: 95px;
@icon4-height: 95px;
@icon4-total-width: 295px;
@icon4-total-height: 195px;
@icon4-image: '../images/icons.png';
@icon4: 100px 100px -100px -100px 95px 95px 295px 195px '../images/icons.png' 'icon4';
@icon5-name: 'icon5';
@icon5-x: 200px;
@icon5-y: 0px;
@icon5-offset-x: -200px;
@icon5-offset-y: 0px;
@icon5-width: 95px;
@icon5-height: 95px;
@icon5-total-width: 295px;
@icon5-total-height: 195px;
@icon5-image: '../images/icons.png';
@icon5: 200px 0px -200px 0px 95px 95px 295px 195px '../images/icons.png' 'icon5';
@icon6-name: 'icon6';
@icon6-x: 200px;
@icon6-y: 100px;
@icon6-offset-x: -200px;
@icon6-offset-y: -100px;
@icon6-width: 95px;
@icon6-height: 95px;
@icon6-total-width: 295px;
@icon6-total-height: 195px;
@icon6-image: '../images/icons.png';
@icon6: 200px 100px -200px -100px 95px 95px 295px 195px '../images/icons.png' 'icon6';
@spritesheet-width: 295px;
@spritesheet-height: 195px;
@spritesheet-image: '../images/icons.png';
@spritesheet-sprites: @icon1 @icon2 @icon3 @icon4 @icon5 @icon6;
@spritesheet: 295px 195px '../images/icons.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
